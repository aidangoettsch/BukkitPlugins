package com.yayestechlab.minecraft.SupplyCrates.config;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;

import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.plugin.Plugin;
import org.bukkit.util.Vector;

import com.yayestechlab.minecraft.SupplyCrates.Main;

public class DataManager {

	public  File crates;
	private  FileConfiguration cratesConfig;
	
	public  void reloadPadConfig(Plugin p) {
	    if (crates == null) {
	    	crates = new File(p.getDataFolder(), "crates.yml");
	    }
	    
	    cratesConfig = YamlConfiguration.loadConfiguration(crates);
	}
	
	public  FileConfiguration getPadConfig(Plugin p) {
		if (cratesConfig == null) {
			reloadPadConfig(p);
		}
		return cratesConfig;
	}
	
	public  void savePadConfig(Plugin p, FileConfiguration cfg) {
	    if (cratesConfig == null || crates == null) {
	    	return;
	    }
	    try {
	        cfg.save(crates);
	    } catch (IOException ex) {
	        p.getLogger().log(Level.SEVERE, "Could not save config to " + crates, ex);
	    }
	}
	
	public  void saveDefaultPadConfig(Plugin p) {
	    if (crates == null) {
	        crates = new File(p.getDataFolder(), "crates.yml");
	    }
	    if (!crates.exists()) {
	         p.saveResource("crates.yml", false);
	     }
	}
	
	public String getKeyByValueVector(Vector v, FileConfiguration cfg, Main plugin) {
		List<String> keys = cfg.getStringList("keylist");
		for (String key : keys) {
			if (cfg.getVector(key).equals(v)){
				return key;
			}
		}
		return null;
	}

	public void set(String arg0, Object arg1, FileConfiguration cfg){
		cfg.set(arg0, arg1);
		List<String> keys = cfg.getStringList("keylist");
		if (arg1 != null){
			if (!keys.contains(arg0)){
				keys.add(arg0);
				cfg.set("keylist", keys);
			}
		
		}
	}
}
